/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define NUM     3
#define FUN     4
#define MEDIA   5
#define EMPTY	6

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp LC(F11)	&kp Q	&kp W	&kp E		&kp R		&kp T																								&kp Y		&kp U		&kp I		&kp O		&kp P		&kp UP
	&kp TAB		&kp A	&kp S	&kp D		&kp F		&kp G																								&kp H		&kp J		&kp K		&kp L		&kp SEMI	&kp DOWN
	&kp LALT	&kp Z	&kp X	&kp C		&kp V		&kp B			&kp LSHFT		&kp LSHFT							&kp LSHFT		&kp LSHFT		&kp N		&kp M		&kp COMMA	&kp DOT		&kp FSLH	&kp RIGHT
								&kp C_MUTE	&kp LCTRL	&lt MEDIA ESC	&lt NAV BSPC	&kp TAB								&lt SYM RET		&lt NUM SPACE	&lt FUN DEL	&kp LEFT	&none
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
		};

		nav_layer {
			bindings = <
	&none	&kp LC(Z)	&kp LS(DEL)	&kp LC(INS)	&kp LS(INS)	&kp LC(Y)																						&kp LC(Y)	&kp LS(INS)	&kp LC(INS)	&kp LS(DEL)	&kp LC(Z)	&none
	&none	&sk LGUI	&sk LALT	&sk LCTRL	&sk LSHFT	&none																							&kp CAPS	&kp LEFT	&kp UP		&kp DOWN	&kp RIGHT	&none
	&none	&none		&none		&none		&none		&none	&trans		&trans										&trans			&trans			&kp INS		&kp HOME	&kp PG_UP	&kp PG_DN	&kp END		&none
									&trans		&trans		&kp ESC	&trans		&kp TAB										&kp RET			&kp SPACE		&kp DEL		&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};

		sym_layer {
			bindings = <
	&none	&kp LBRC	&kp AMPS	&kp STAR	&kp LPAR	&kp RBRC																						&kp LC(Y)	&kp LS(INS)	&kp LC(INS)	&kp LS(DEL)	&kp LC(Z)	&none
	&none	&kp DQT		&kp DLLR	&kp PRCNT	&kp CARET	&kp PLUS																						&none		&sk LSHFT	&sk LCTRL	&sk LALT	&sk LGUI	&none
	&none	&kp TILDE	&kp EXCL	&kp AT		&kp HASH	&kp PIPE	&trans		&trans									&trans			&trans			&none		&none		&none		&none		&none		&none
									&trans		&trans		&kp LPAR	&kp RPAR	&kp UNDER								&trans			&kp SPACE		&kp DEL		&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};

		num_layer {
			bindings = <
	&none	&kp LBKT	&kp N7	&kp N8	&kp N9	&kp RBKT																									&kp LC(Y)	&kp LS(INS)	&kp LC(INS)	&kp LS(DEL)	&kp LC(Z)	&none
	&none	&kp SQT		&kp N4	&kp N5	&kp N6	&kp EQUAL																									&none		&sk LSHFT	&sk LCTRL	&sk LALT	&sk LGUI	&none
	&none	&kp GRAVE	&kp N1	&kp N2	&kp N3	&kp BSLH	&trans		&trans												&trans			&trans			&none		&none		&none		&none		&none		&none
								&trans	&trans	&kp DOT		&kp N0		&kp MINUS											&kp RET			&trans			&kp DEL		&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};

		fun_layer {
			bindings = <
	&none	&kp F12	&kp F7	&kp F8	&kp F9	&kp PSCRN																										&kp LC(Y)	&kp LS(INS)	&kp LC(INS)	&kp LS(DEL)	&kp LC(Z)	&none
	&none	&kp F11	&kp F4	&kp F5	&kp F6	&kp SCROLLLOCK																									&none		&sk LSHFT	&sk LCTRL	&sk LALT	&sk LGUI	&none
	&none	&kp F10	&kp F1	&kp F2	&kp F3	&kp PAUSE_BREAK	&trans		&trans												&trans			&trans			&none		&none		&none		&none		&none		&none
							&trans	&trans	&kp ESC			&kp BSPC	&kp TAB												&kp RET			&kp SPACE		&trans		&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};

		media_layer {
			bindings = <
	&none	&bt BT_SEL 0	&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4																	&none		&none		&none			&none			&none		&none
	&none	&sk LGUI		&sk LALT		&sk LCTRL		&sk LSHFT		&none																			&none		&kp C_PREV	&kp C_VOL_UP	&kp C_VOL_DN	&kp C_NEXT	&none
	&none	&none			&none			&none			&none			&none		&trans		&bt BT_CLR				&trans		&trans				&none		&none		&kp C_BRI_UP	&kp C_BRI_DN	&none		&none
											&trans			&trans			&trans		&kp BSPC	&kp TAB					&kp C_STOP	&kp C_PLAY_PAUSE	&kp C_MUTE	&trans		&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(LEFT) LC(RIGHT)>;
		};

		empty_layer {
			bindings = <
	&none	&none	&none	&none	&none	&none												&none	&none	&none	&none	&none	&none
	&none	&none	&none	&none	&none	&none												&none	&none	&none	&none	&none	&none
	&none	&none	&none	&none	&none	&none	&trans	&trans				&trans	&trans	&none	&none	&none	&none	&none	&none
							&trans	&trans	&trans	&trans	&trans				&trans	&trans	&trans	&trans	&trans
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_DN PG_UP>;
		};
	};
};
